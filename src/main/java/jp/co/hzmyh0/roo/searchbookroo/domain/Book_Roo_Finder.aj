// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package jp.co.hzmyh0.roo.searchbookroo.domain;

import java.lang.String;
import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import jp.co.hzmyh0.roo.searchbookroo.domain.Book;
import jp.co.hzmyh0.roo.searchbookroo.domain.Genre;

privileged aspect Book_Roo_Finder {
    
    public static TypedQuery<Book> Book.findBooksByGenreSet(Set<Genre> genreSet) {
        if (genreSet == null) throw new IllegalArgumentException("The genreSet argument is required");
        EntityManager em = Book.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Book AS o WHERE");
        for (int i = 0; i < genreSet.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :genreSet_item").append(i).append(" MEMBER OF o.genreSet");
        }
        TypedQuery<Book> q = em.createQuery(queryBuilder.toString(), Book.class);
        int genreSetIndex = 0;
        for (Genre _genre: genreSet) {
            q.setParameter("genreSet_item" + genreSetIndex++, _genre);
        }
        return q;
    }
    
    public static TypedQuery<Book> Book.findBooksByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = Book.entityManager();
        TypedQuery<Book> q = em.createQuery("SELECT o FROM Book AS o WHERE o.name = :name", Book.class);
        q.setParameter("name", name);
        return q;
    }
    
}
